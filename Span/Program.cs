/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/*
Тип Span представляет непрерывную область памяти. Цель данного типа - повысить 
производительность и эффективность использования памяти. Span позволяет избежать
дополнительных выделений памяти при операции с наборами данных. Поскольку Span
является структурой, то объект этого типа располагаетс в стеке, а не в хипе.
Создание Span
Для создания объекта Span можно применять один из его конструкторов:
Span(): создает пустой объект Span
Span(T item): создает объект Span с одним элементом item
Span(T[] array): создает объект Span из массива array
Span(void* pointer, int length): создает объект Span, который получает length байт
 памяти, начиная с указателя pointer
Span(T[] array, int start, int length): создает объект Span, который получает из
 массива array length элементов, начиная с индекса start
Например, простейшее создание Span:
*/
//Например, простейшее создание Span:
  
Span<string> people = ["Tom", "Bob", "Sam"];
//В данном случае Span будет хранить ссылки на три строки.

//Нередко Span создается на основе каких-то других наборов данных:

string[] people2 =  { "Tom", "Alice", "Bob" };
Span<string> peopleSpan = new Span<string>(people2);
//Мы также можем непосредственно присвоить массив, и он неявно будет преобразован в Span:

string[] people3 = { "Tom", "Alice", "Bob" };
Span<string> peopleSpan2 = people3;
//Далее мы можем получать, устанавливать или перебирать данные также, как в массиве:


/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

Console.ReadLine();

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */