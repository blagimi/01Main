// See https://aka.ms/new-console-template for more information
using System.Security.Cryptography;

int number = 23;    // Базовое присваивание, правый операнд присваивается к левому

int a, b, c;
a = b = c = 34;     //  Множественное присвоение

int a2, b2, c2;
a2 = b2 = c2 = 34 * 2 / 4; // 17 операции присвоения имеют низкий приоритет, в этом примере сперва будет вычисляться правая часть а потом присвоение

/* Кроме базовой операции присвоения еще есть: 
 * +=: присваивание после сложения. Присваивает левому операнду сумму левого и правого операндов: выражение A += B равнозначно выражению A = A + B

-=:  после вычитания. Присваивает левому операнду разность левого и правого операндов: A -= B эквивалентно A = A - B

*=:  после умножения. Присваивает левому операнду произведение левого и правого операндов: A *= B эквивалентно A = A * B

/=:  после деления. Присваивает левому операнду частное левого и правого операндов: A /= B эквивалентно A = A / B

%=:  после деления по модулю. Присваивает левому операнду остаток от целочисленного деления левого операнда на правый: A %= B эквивалентно A = A % B

&=:  после поразрядной конъюнкции. Присваивает левому операнду результат поразрядной конъюнкции его битового представления с битовым представлением правого операнда: A &= B эквивалентно A = A & B

|=:  после поразрядной дизъюнкции. Присваивает левому операнду результат поразрядной дизъюнкции его битового представления с битовым представлением правого операнда: A |= B эквивалентно A = A | B

^=:  после операции исключающего ИЛИ. Присваивает левому операнду результат операции исключающего ИЛИ его битового представления с битовым представлением правого операнда: A ^= B эквивалентно A = A ^ B

<<=:  после сдвига разрядов влево. Присваивает левому операнду результат сдвига его битового представления влево на определенное количество разрядов, равное значению правого операнда: A <<= B эквивалентно A = A << B

>>=:  после сдвига разрядов вправо. Присваивает левому операнду результат сдвига его битового представления вправо на определенное количество разрядов, равное значению правого операнда: A >>= B эквивалентно A = A >> B
*/

int a3 = 10;
a3 += 10;       //  20
a3 -= 4;        //  16
a3 *= 2;        //  32
a3 /= 8;        //  4
a3 <<= 4;       //  64
a3 >>= 2;       //  16

// Операция присвоения являются правоассоциативными, т.е выполняются справо на лево
int a4 = 8;
int b4 = 6;
int c4 = a4 += b4 -= 5; // 9

/* 
 * b4 -= 5 (6-5=1)
 * a4 += (b4-=5) (8+1) = 9
 * c4 = (a4 += (b4-=5)) (c4=9)
 */