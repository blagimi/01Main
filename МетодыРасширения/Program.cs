/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */   

/*
Методы расширения.
Методы расширения (extension methods) позволяют добавлять новые методы в уже 
существующие типы без создания нового производного класса. Эта функциональность
бывыет полезно когда нужно добавить в некоторый тип новый метод, но сам тип 
(класс или структуру) мы изменить не можем, поскольку у нас нет доступа к исходному
коду. Либо если нет возможности спользовать стандартный механизм наследования. Если
классы определенны с модификатором sealed.
*/

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */  

/*
Например добавить для типа string новый метод. Для того что бы создать метод расширения
вначале надо создать статический класс, который и будет содержать метод. В данном случае
это класс StringExtenssion. Затем объявляется статический метод. Суть метода расширения
- подсчёт количества определенных симоволов в строке. Собственно метод расширения - это
обычный статический метод который в качестве параметра всегда принимает такую конструкцию
this имя_типа название_параметра в примере this string str. Так как метод будет типа 
string то его и используем. Затем у всех строк можно вызвать данный метод.
int i = s.CharCount(c);
При этом уже не надо указывать первый параметр. Значение для остальных параметров
передаются в обычном порядке. Приминение методов расширения очень удобно, но при этом
надо помнить что метод расширения никогда не будет вызван, если он имеет ту же
сигнатуру что и метод изначально определенный в типе. Так же методы расширения
действуют на уровне пространства имён. То есть если добавить в проект другое
пространство имен, то метод не будет применяться к строкам и в этом случае надо 
подключить пространство имен метода через директиву using.
*/

string s = "Привет мир";
char c = 'и';
int i = s.CharCount(c);
Console.WriteLine(i);                   //  2


            
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */   

Console.ReadLine();

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */   


public static class StringExtension
{
    public static int CharCount(this string str, char c)
    {
        int counter = 0;
        for (int i = 0; i < str.Length; i++)
        {
            if (str[i] == c)
                counter++;
        }
        return counter;
    }
}
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */   

