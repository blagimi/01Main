using РазличияПереопределенияИСкрытия;

/*
 * Переопределение.
 * При вызове tom.Print(); выполняется реализация метода Print из класса Employee, несмотря
 * на то, что переменная tom - переменная типа Person.
 * При работе с виртуальными методами компилятор формирует таблицу виртуальных методов 
 * Virtual Method Table или VMT в нее запивается адрес виртуальных методов. Для каждого класса
 * создается своя таблица.
 * При создании объекта класса, компилятор передает в конструктор объекта специальный код который
 * связывает объект и таблицу VMT. При вызове виртуального метода из объекта берется адрес его таблицы
 * VMT. Затем оттуда извлекается адрес метода и ему передается управление. Процесс выбора реализации 
 * производится во время выполнения программы. Именно так выполняется виртуальный метод, т.к среде
 * требуется получить из таблицы VMT адрес нужного метода, то это немного замедляет выполнение программы.
 */
Person tom = new Employee("Tom", "Microsoft");
tom.Print();
/*
 * Скрытие.
 * Переменная tom представляет тип Person, но хранит ссылку на объект Employee.
 * Однако при вызове метода Print будет выполняеться та версия метода, которая 
 * определена в классе Person а не в классе Employee. Класс Employee никак не переопределяет
 * метод Print, унаследованный от базового класса, а фактически определяет новый метод.
 * Поэтому при вызове метода jack.Print(); вызывается метод Print из класса Person.
 */
HiddenPerson jack = new HiddenEmployee("Jack", "Microsoft");
jack.Print();