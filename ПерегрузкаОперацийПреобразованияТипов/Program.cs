using ПерегрузкаОперацийПреобразованияТипов;

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/*
Перегрузка операций преобразования типов.
Ранее были рассмотрены явные и неявные преобразования примитивных типов.
int x = 50;
byte y = (byte)x;                       // Явное преобразования от int к byte
int z = y;                              // Не явное преобразование от byte к int
С помощью перегрузки операторов можно определять логику преобразования одних типов
в другие. Для этого используется метод следующей формы
public static impicit|explicit operator тип_в_который_преобразовать(исходный_тип param)
{
    // какая-то логика
}
После помификаторов public static идет ключевое слово explicit(Если преобразование
явное, то есть нужно операция приведения типов) или implicit(Если преобразование
неявное). Затем идет ключевое слово operator и далее возвращаемый тип, в который надо
преобразовать объект. В скобках в качестве параметра объект который надо преобразовать.
*/

/*
Например, есть класс Counter представляющий счётчик-секундомер который хранит
количество секунд в свойстве Seconds.
Первый оператор преобразует число - объект типа int к типу Counter. Его логика проста
создается новый объект Counter у которого устанавливается свойство Seconds.
Второй оператор преобразует объект Counter к типу int, то есть получает из Counter
число.
*/
Counter counter1 = new() {Seconds = 23};
int x = (int)counter1;
Console.WriteLine(x);                   //  23
Counter counter2 = x;
Console.WriteLine(counter2.Seconds);    //  23
/*
Поскольку операция преобразования из Counter в int определена с ключевым словом
explicit т.е как явное преобразование, то в этом случае необходимо применить
операцию привидения типов. 
int x = (int)counter1;
*/

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
Console.ReadLine();