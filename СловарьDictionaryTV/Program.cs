/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* Коллекция Dictionary<K, V> 
Еще один распространенный тип коллекции представляют словари. Словарь хранит объекты, 
которые представляют пару ключ-значение. Класс словаря Dictionary<K, V> типизируется 
двумя типами: параметр K представляет тип ключей, а параметр V предоставляет тип 
значений.*/

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* Создания и инициализация словаря
Класс Dictionary предоставляет ряд конструкторов для создания словаря. Например, 
мы можем создать пустой словарь:
*/

Dictionary<int, string> people = new Dictionary<int, string>();

/*Здесь словарь people в качестве ключей принимает значения типа int, а в качестве 
значений - строки.
При определении словаря его сразу же можно инициализировать значениями:
*/
var people2 = new Dictionary<int, string>()
{
    { 5, "Tom"},
    { 3, "Sam"},
    { 11, "Bob"}
};

/* При инициализации применяется инициализитор - в фигурных скобках после вызова
 конструктора объекту передаются начальные данные. В случае со словаем мы можем
  передать в инициализаторе набор элементов, где каждый элемент заключается в 
  фигурные скобки, например: { 5, "Tom"}
*/

/*
Каждый элемент представляет два значения: первое значение представляет ключ, а 
второе значение - собственно значение элемента. Поскольку при объявлении словаря
people для ключей указан тип int, а для значений - тип string, то в элементе 
словаря сначала указывается число int, а затем строка. То есть в случае выше
элемент имеет ключ 5, а значение - "Tom". Затем по ключу элемента мы сможем 
получить его значение.
Также мы можем применять другой способ инициализации:
При таком способе инициализации в квадратных скобках указывается ключ и ему 
присваивается значение элемента. Но в целом этот способ инициализации будет 
равноценен предыдущему.
*/

var people3 = new Dictionary<int, string>()
{
    [5] = "Tom",
    [6] = "Sam",
    [7] = "Bob"
};  

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* KeyValuePair 
Стоит отметить, что каждый элемент в словаре представляет структуру KeyValuePair
<TKey, TValue>, где параметр TKey представляет тип ключа, а параметр TValue - тип 
значений элементов. Эта структура предоставляет свойства Key и Value, с помощью 
которых можно получить соответственно ключ и значение элемента в словаре. И одна
 из версий конструктора Dictionary позволяет инициализировать словарь коллекцией 
 объектов KeyValuePair:
*/

var mike = new KeyValuePair<int, string>(56, "Mike"); 
var employees = new List<KeyValuePair<int, string>>() { mike};
var people4 = new Dictionary<int, string>(employees);

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */





Console.ReadLine();

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */