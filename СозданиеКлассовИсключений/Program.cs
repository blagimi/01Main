/*
 * Создание классов исключений.
 * Если нас не устраивают встроенные типы исключений, то мы можем создать свои типы. 
 * Базовым классом для всех исключений является класс Exception, соответственно для 
 * создания своих типов мы можем унаследовать данный класс.
 */
using СозданиеКлассовИсключений;

try
{
    Person person = new() { Name = "Tom", Age=17 };
}
catch (PersonException ex)
{
    Console.WriteLine($"{ex.Message}, Некоректное значение: {ex.Value}");
}
/*
 * В классе Person при установке возраста происходит проверка, и если возраст меньше 18,
 * то выбрасывается исключение. Класс Exception принимает в конструкторе в качестве параметра
 * строку, которое затем передается в его свойство Message.
 * Но иногда удобнее использовать свои классы исключений. Например, в какой-то ситуации мы 
 * хотим обработать определенным образом только те исключения, которые относятся к классу 
 * Person. Для этих целей мы можем сделать специальный класс PersonException:
 */

/*
 * Однако необязательно наследовать свой класс исключений именно от типа Exception, 
 * можно взять какой-нибудь другой производный тип. Например, в данном случае мы можем 
 * взять тип ArgumentException, который представляет исключение, генерируемое в результате
 * передачи аргументу метода некорректного значения
 */