/*
 * Обработка исключений.
 * Конструкция try..catch..finally
 * При использовании блока try...catch..finally вначале выполняются все инструкции
 * в блоке try. Если в этом блоке не возникло исключений, то после его выполнения 
 * начинает выполняться блок finally. И затем конструкция try..catch..finally 
 * завершает свою работу.Если же в блоке try вдруг возникает исключение, то 
 * обычный порядок выполнения останавливается, и среда CLR начинает искать блок 
 * catch, который может обработать данное исключение. Если нужный блок catch найден,
 * то он выполняется, и после его завершения выполняется блок finally.Если нужный блок
 * catch не найден, то при возникновении исключения программа аварийно завершает свое
 * выполнение
 */

try
{
    int x = 5;
    int y = x / 0;
    Console.WriteLine($"Результат: {y}");
}
catch
{
    Console.WriteLine("Возникло исключение!");
}
finally
{
    Console.WriteLine("Блок finally");
}
/*
 * Обработка исключений и условные конструкции.
 * Если пользователь передаст в метод не число, а строку, которая содежит
 * нецифровые символы, то программа выпадет в ошибку. С одной стороны, 
 * здесь как раз та ситуация, когда можно применить блок try..catch, чтобы
 * обработать возможную ошибку. Однако гораздо оптимальнее было бы проверить 
 * допустимость преобразования:
 */
Square("12");
Square("ab");
/*
 * Метод int.TryParce()  возвращает true, если преобразование 
 * можно осуществить, и false - если нельзя. При допустимости преобразования 
 * переменная x будет содержать введенное число. Так, не используя try...catch
 * можно обработать возможную исключительную ситуацию.С точки зрения 
 * производительности использование блоков try..catch более накладно, 
 * чем применение условных конструкций. Поэтому по возможности вместо 
 * try..catch лучше использовать условные конструкции на проверку
 * исключительных ситуаций.
 */
static void Square(string data)
{
    if (int.TryParse(data, out var x))
    {
        Console.WriteLine($"Квардарт числа {x}: = {x*x}");
    }
    else 
    Console.WriteLine("Некорректный ввод");
}
Console.WriteLine("Конец программы");