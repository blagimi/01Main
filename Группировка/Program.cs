/*
Для группировки данных по определенным параметрам применяется оператор group by и метод GroupBy().
*/

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#region Оператор group by

/*

Данный класс представляет пользователя и имеет два свойства: Name (имя пользователя) и 
Company (компания, где работает пользователь). Сгруппируем набор пользователей по компании:

*/

static void Example()
{
    Person[] people =
    {
        new Person("Tom", "Microsoft"), new Person("Sam", "Google"),
        new Person("Bob", "JetBrains"), new Person("Mike", "Microsoft"),
        new Person("Kate", "JetBrains"), new Person("Alice", "Microsoft"),
    };
    
    var companies = from person in people
                    group person by person.Company;
    
    foreach(var company in companies)
    {
        Console.WriteLine(company.Key);
    
        foreach(var person in company)
        {
            Console.WriteLine(person.Name);
        }
        Console.WriteLine(); // для разделения между группами
    }
}

Example();

/*
Если в выражении LINQ последним оператором, выполняющим операции над выборкой, является group, 
то оператор select не применяется.

Оператор group принимает критерий по которому проводится группировка:

group person by person.Company

в данном случае группировка идет по свойству Company. Результатом оператора group является выборка, 
которая состоит из групп. Каждая группа представляет объект IGrouping<K, V>: параметр K указывает на 
тип ключа - тип свойства, по которому идет группировка (здесь это тип string). А параметр V 
представляет тип сгруппированных объектов - в данном случае группируем объекты Person.

Каждая группа имеет ключ, который мы можем получить через свойство Key: g.Key. Здесь это будет 
название компании.

Все элементы внутри группы можно получить с помощью дополнительной итерации. Элементы группы 
имеют тот же тип, что и тип объектов, которые передавались оператору group, то есть в данном 
случае объекты типа Person.

В итоге мы получим следующий вывод:

Microsoft
Tom
Mike
Alice

Google
Sam

JetBrains
Bob
Kate


*/


#endregion



/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

Console.ReadLine();

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

record class Person(string Name, string Company);