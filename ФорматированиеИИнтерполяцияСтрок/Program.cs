/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#region Форматирование строк

/* При выводе строк в консоли с помощью метода Console.WriteLine для встраивания 
значений в строку мы можем применять форматирование вместо конкатенации:
*/

string name = "Tom";
int age = 23;
 
Console.WriteLine("Имя: {0}  Возраст: {1}", name, age);
// консольный вывод
// Имя: Tom  Возраст: 23

/* В строке "Имя: {0} Возраст: {1}" на место {0} и {1} затем будут вставляться в
порядке следования значения переменныйх name и age

То же самое форматирование в строке мы можем сделать не только в методе
Console.WriteLine, но и в любом месте программы с помощью метода string.Format:
*/

string name2= "Tom";
int age2 = 23;
string output = string.Format("Имя: {0}  Возраст: {1}", name2, age2);
Console.WriteLine(output);

/*
Метод Format принимает строку с плейсхолдерами типа {0}, {1} и т.д., а также набор
 аргументов, которые вставляются на место данных плейсхолдеров. В итоге генерируется
  новая строка.
*/

#endregion

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


#region Спецификаторы форматирования

#endregion

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


#region Метод ToString

#endregion

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


#region Интерполяция строк

#endregion

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

Console.ReadLine();

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
