using СкрытиеМетодовИСвойств;

/*
 * Скрытие методов и свойств.
 * Еще одним способом изменить функциональность метода, унаследованного от базового класса, является
 * скрытие (shadowing/hidding).
 * Скрытие представляет определение в классе наследнике метода или свойства, которые соответсвуют по имени
 * и набору параметров методу или свойству базового класса. Для скрытие применяется ключевое слово new.
 */

/*
 * Скрытие можно использовать когда метод или свойто не является виртуальным и мы не можем его переопределить.
 * Однако если он не подходит его можно скрыть и переопределить заного. 
 * Если же всё еще нужно обратиться именно к реализации из базового класса то можно использовать ключевоек слово base
 * public new void Print()
 * {
 *  base.Print();
 *  Console.WriteLine($"Company: {Company}");
 *  }
 */

Person bob = new("Bob");
Employee tom = new("Tom", "Microsoft");
bob.Print();    //  Вызов метода из класса Person   Name: Bob
tom.Print();    //  Скрытие метода из класса Person и переопределение его   Name: Tom Company: Microsoft

/*
 * Подобным образом можно скрывать и свойства.
 * В классе Employee переопределено свойство Name. В блоке get берется свойство из базового класса и добавляется
 * Mr./Ms. В блоке set передаем полученное значение в реализацию свойства Name завого класса Person
 */

/*
 * Скрытие переменных и констант.
 * В отличие от переопределения скрытие позволяет применить скрытие к переменным (как к статическим, так и не статическим)
 * и константам так же используя ключевое слово new.
 */
Console.WriteLine(Person.minAge);       //  1           Статическое поле
Console.WriteLine(Person.TYPENAME);     //  Person      Константа
Console.WriteLine(Employee.minAge);     //  18          скрытие базового статического поля и новая реализация
Console.WriteLine(Employee.TYPENAME);   //  Employee    Скрытая базовая константа и новая её реализация   